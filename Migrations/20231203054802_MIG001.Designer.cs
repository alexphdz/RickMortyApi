// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RickAndMortyApi.Migrations
{
    [DbContext(typeof(RickMortyDbContext))]
    [Migration("20231203054802_MIG001")]
    partial class MIG001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Character", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Character", b =>
                {
                    b.OwnsOne("CharacterLocation", "location", b1 =>
                        {
                            b1.Property<int>("Characterid")
                                .HasColumnType("int");

                            b1.Property<string>("name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("url")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Characterid");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("Characterid");
                        });

                    b.OwnsOne("Origin", "origin", b1 =>
                        {
                            b1.Property<int>("Characterid")
                                .HasColumnType("int");

                            b1.Property<string>("name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("url")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Characterid");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("Characterid");
                        });

                    b.Navigation("location")
                        .IsRequired();

                    b.Navigation("origin")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
